paypal_web_checkout:
    business: default
    payment_process:
        route: store_payment_paypal_web_checkout_process
    payment_success:
        route: store_order_thanks
        order_append: true
        order_append_field: id
    payment_cancel:
        route: store_homepage
        order_append: false
    payment_fail:
        route: store_checkout_payment_fail
        order_append: true
        order_append_field: id

#
# Paypal services
#
services:
    paypal_web_checkout.wrapper:
        class: %paypal_web_checkout.wrapper.class%
        arguments:
            form.factory: @form.factory
            payment.bridge: @payment.bridge
            router: @router
            business: @=elcodi_config('elcodi_plugin.paypal_web_checkout.recipient')
            url_factory: @paypal_web_checkout.url_factory

    paypal_web_checkout.url_factory:
        class: %paypal_web_checkout.url_factory.class%
        arguments:
            router: @router
            business: @=elcodi_config('elcodi_plugin.paypal_web_checkout.recipient')
            paypal_url: %paypal_web_checkout.api_endpoint%
            paypal_sandbox_url: %paypal_web_checkout.sandbox_api_endpoint%
            paypal_notify_validate_query_param: { cmd: _notify-validate }
            return_route_name: %paypal_web_checkout.success.route.name%
            cancel_return_route_name: %paypal_web_checkout.cancel.route.name%
            process_route_name: %paypal_web_checkout.process.route.name%
            debug: %paypal_web_checkout.debug%

#
# Elcodi configuration
#

elcodi_configuration:
    elements:

        #
        # Paypal
        #
        elcodi_plugin_paypal_web_checkout_recipient:
            key: recipient
            name: Elcodi Plugin Paypal Web Checkout Recipient
            namespace: elcodi_plugin_paypal_web_checkout
            type: string
            can_be_empty: true
            default_value: ''
